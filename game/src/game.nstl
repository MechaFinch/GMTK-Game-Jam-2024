
--
-- GMTK Game Jam 2024
-- Game & Entry Point
--

-- From library
library _forth from "../forth/kernelv2/src/forth";
library _gutil from "simvideo/gutil";
library _os from "fakeos/os";
library _sprites from "simvideo/sprites";
library _util;

-- From game
library _fs;
library _periodic;
library _ui;
library _spritedata from "../resources/spritedata";
library _palette from "../resources/palette";
library _editor from "editor/editor";

define DRAM_START is 0x0009_0000;

define STDIN is 0;
define STDOUT is 1;

define FORTH_PARAM_STACK_SIZE is 4096;
define FORTH_LOCAL_STACK_SIZE is 4096;
define FORTH_USER_DICT_SIZE is 65536;
define FORTH_USER_DICT_PAD is 64;
define FORTH_STACK_PAD is 64;

variable ui_data is interface_data;

function main of none begin
	-- Initialize
	call _periodic.init with none;
	call _os.init with DRAM_START, 0x000F_0000 - DRAM_START;
	call _os.change_file_attr with 0, 0b0100;	-- disable input echo for fully custom key handling
	call _forth.interop_init with FORTH_PARAM_STACK_SIZE, FORTH_LOCAL_STACK_SIZE, FORTH_USER_DICT_SIZE, FORTH_USER_DICT_PAD, FORTH_STACK_PAD;
	call _fs.compile with none;
	call _gutil.set_palette with to _palette.p1;
	
	-- Find words
	constant str_game_update is string gets "RUN-PLAYER-CODE";
	variable fw_game_update is ptr gets (call _fs.find with to str_game_update, sizeof str_game_update);
	
	constant str_game_start is string gets "placeholder";
	variable fw_game_start is ptr gets (call _fs.find with to str_game_start, sizeof str_game_start);
	
	constant str_compile_editor is string gets "compile-editor";
	variable fw_compile_editor is ptr gets (call _fs.find with to str_compile_editor, sizeof str_compile_editor);
	
	constant str_commit_editor is string gets "commit-editor";
	variable fw_commit_editor is ptr gets (call _fs.find with to str_commit_editor, sizeof str_commit_editor);
	
	constant str_tile_sprite_id is string gets "GET-TILE-SPRITE-ID";
	variable fw_tile_sprite_id is ptr gets (call _fs.find with to str_tile_sprite_id, sizeof str_tile_sprite_id);
	
	constant str_ended_win is string gets "IS-ENDED-WIN";
	variable fw_ended_win is ptr gets (call _fs.find with to str_ended_win, sizeof str_ended_win);
	
	constant str_ended_loss is string gets "IS-ENDED-LOSS";
	variable fw_ended_loss is ptr gets (call _fs.find with to str_ended_loss, sizeof str_ended_loss);
	
	constant str_ending_text is string gets "PRINT-ENDING-TEXT";
	variable fw_ending_text is ptr gets (call _fs.find with to str_ending_text, sizeof str_ending_text);
	
	constant str_fuel_count is string gets "FUEL-COUNT";
	variable fw_fuel_count is ptr gets (call _fs.find with to str_fuel_count, sizeof str_fuel_count);
	
	constant str_metal_count is string gets "METAL-COUNT";
	variable fw_metal_count is ptr gets (call _fs.find with to str_metal_count, sizeof str_metal_count);
	
	constant str_disco_count is string gets "DISCOVERIES-COUNT";
	variable fw_disco_count is ptr gets (call _fs.find with to str_disco_count, sizeof str_disco_count);
	
	constant str_max_turtles is string gets "MAX-TURTLES";
	variable fw_max_turtles is ptr gets (call _fs.find with to str_max_turtles, sizeof str_max_turtles);
	
	constant str_turtle_get_active is string gets "TURTLES[].ISACTIVE";
	variable fw_turtle_get_active is ptr gets (call _fs.find with to str_turtle_get_active, sizeof str_turtle_get_active);
	
	constant str_fuel_win is string gets "FUEL-TO-WIN";
	variable fw_fuel_win is ptr gets (call _fs.find with to str_fuel_win, sizeof str_fuel_win);
	
	-- Hide words
	call _fs.hide_words with none;
	
	-- init game
	call _forth.interop_pcall with fw_game_start;
	
	-- Init text regions
	ui_data gets interface_data of
		-- code editor text areas
		region_code_editor gets (call _editor.create_region with 2, 2, 20, 22, 128),
		region_dictionary gets (call _editor.create_region with 24, 2, 13, 12, 29),
		region_notes gets (call _editor.create_region with 24, 15, 13, 11, 32),
		region_code_output gets (call _editor.create_region with 7, 3, 26, 20, 0),		-- terminal output area
		region_turtle_output gets (call _editor.create_region with 13, 16, 25, 9, 0),	-- terminal output area
		region_resources gets (call _editor.create_region with 30, 2, 8, 12, 0),		-- terminal output area
		
		fword_game_update gets fw_game_update,
		fword_compile_editor gets fw_compile_editor,
		fword_commit_editor gets fw_commit_editor,
		fword_tile_sprite_id gets fw_tile_sprite_id,
		fword_ended_win gets fw_ended_win,
		fword_ended_loss gets fw_ended_loss,
		fword_ending_text gets fw_ending_text,
		fword_fuel_count gets fw_fuel_count,
		fword_metal_count gets fw_metal_count,
		fword_disco_count gets fw_disco_count,
		fword_max_turtles gets fw_max_turtles,
		fword_turtle_get_active gets fw_turtle_get_active,
		fword_fuel_win gets fw_fuel_win
	end structure;
	
	-- populate regions
	constant str_default_update is string gets ": UPDATE ( -- ) ;";
	call _util.memcopy with to str_default_update, ui_data.region_code_editor.buffer, sizeof str_default_update;
	
	call _util.memcopy with to _fs.playerdictionary, ui_data.region_dictionary.buffer, 29 * 14;
	call _util.memcopy with to _fs.defaultnotes, ui_data.region_notes.buffer, 10 * 14;
		
	call _ui.run_interface with to ui_data;
	
	-- Safety loop
	while 1 do
		call _util.halt with none;
	end while
end function
